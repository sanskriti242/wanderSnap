{"version":3,"file":"static/js/747.f8e0bcaf.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef(); //In this constant we store a pointer to below div\r\n\r\n  const { center, zoom } = props; //to get center and zoom from props and store in new constants and use as dependency\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    }); //This is a constructor function which will now be available on the global window object in the end\r\n    //current prop holds the actual pointer we need\r\n\r\n    new window.google.maps.Marker({ position: center, map: map }); //This will create new marker in center of map\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./PlaceItem.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>} //props.footer\r\n        // footer={\r\n        //   <div>\r\n        //     <h2>close</h2>\r\n        //   </div>\r\n        // }\r\n        // {/* passing values to Modal.js */}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-tem__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found, maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  // const userId = useParams().userId;\r\n  const userId = useParams().userId;\r\n  // console.log(userId);\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        // console.log(userId);\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {\r\n        // console.error(err);\r\n      }\r\n      // console.log(userId);\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n  // const loadedPlaces = DUMMY_PLACES.filter((place) => place.creator === userId);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n      ;\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default UserPlaces;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","concat","style","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","showMap","setShowMap","_useState3","_useState4","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","process","id","Authorization","token","onDelete","t0","stop","apply","arguments","_jsxs","React","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","items","length","place","PlaceItem","creator","location","onDeletePlace","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","responseData","sent","places","PlaceList","deletedPlaceId","prevPlaces","filter"],"sourceRoot":""}