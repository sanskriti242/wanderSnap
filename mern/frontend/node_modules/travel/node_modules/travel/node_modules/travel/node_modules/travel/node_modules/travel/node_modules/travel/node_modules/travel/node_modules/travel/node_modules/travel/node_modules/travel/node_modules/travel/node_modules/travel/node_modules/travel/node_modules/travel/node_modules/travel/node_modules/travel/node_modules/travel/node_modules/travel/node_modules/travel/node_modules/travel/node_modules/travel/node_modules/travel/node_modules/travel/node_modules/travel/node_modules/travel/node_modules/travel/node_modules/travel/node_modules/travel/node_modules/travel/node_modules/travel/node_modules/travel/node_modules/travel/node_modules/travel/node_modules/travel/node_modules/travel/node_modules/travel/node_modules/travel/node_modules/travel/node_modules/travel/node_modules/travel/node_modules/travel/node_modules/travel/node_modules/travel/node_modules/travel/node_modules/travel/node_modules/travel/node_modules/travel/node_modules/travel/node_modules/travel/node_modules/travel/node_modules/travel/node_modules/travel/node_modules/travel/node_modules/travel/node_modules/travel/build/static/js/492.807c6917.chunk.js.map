{"version":3,"file":"static/js/492.807c6917.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValis: false,\r\n      },\r\n    },\r\n    false\r\n  ); //false->initial form validity\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault(); //to prevent reload and crashing of our single page application\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      // formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      ); //send this to backend\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]} //input is not empty\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]} //input is not empty\r\n          errorText=\"Please enter a valid description atleast 5 characters.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE]} //input is not empty\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default NewPlace;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result); //setting a previewURL\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        {/* this will allow to control how the image preview will add and how picker button will be positioned if they are centered or not*/}\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state; //unchanged\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  // const [enteredValue, setEnteredValue] = useState(\"\");\r\n  // const [isValid, setIsValid] = useState(false);\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.text}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.row || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          //if name is set to undefined\r\n          continue; //skip this property don't check isValid on name\r\n        }\r\n        if (inputId === action.inputId) {\r\n          //checking if the input we are currently looking at is the input which is getting updated here in current action, if so I will take information from dispatched action on whether it is valid or not\r\n          formIsValid = formIsValid && action.isValid; //if the input change for given input is valid\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid; //stored value\r\n        } //taking the previous value of formIsValid and combining it with new value,   this ensures if one false validity is there overall form validity becomes false\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs, //input=current input state\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }, //overriding input state for input we are updating with action\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        //no need to copy just override\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity, //stores whether entire form is valid\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\", //any identifier is possible\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","isValis","_useForm2","_slicedToArray","formState","inputHandler","history","useHistory","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","process","Authorization","token","push","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","text","placeholder","onBlur","rows","row","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","_e2","_createForOfIteratorHelper","validator","trim","test"],"sourceRoot":""}